[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = auto
	ui = true
	pager = true

[color "status"]
	added = cyan bold
	changed = red bold
	untracked = green bold

[color "branch"]
	current = blue bold
	local = magenta bold
	remote = green bold

[color "log"]
	author = cyan

[user]
	email = mnestorov@protonmail.com
	name = Martin Nestorov

[alias]
	lg = log --all --stat --pretty=oneline --graph --format='%h %d %an %cr %s' --oneline
	l = log --all --stat --graph --format='%h %d %an %cr %s'
	log-search = "!l() { git log --all --grep=$1 ; }; l"
	repo-search = "!r() { git grep $1 $(git rev-list --all) ; }; r"
	obl = "!o() { git log --pretty=oneline --graph --oneline ; }; o"
	sobl = "!so() { git log --stat --pretty=oneline --graph --oneline ; }; so"
	mobl = "!mo() { git log --pretty=oneline --graph --oneline $1.. ; }; mo"
	mobls = "!os() { git log --stat --pretty=oneline --graph --oneline $1.. ; }; os"
	up = pull --rebase
	br = branch --verbose -a
	sfp = push --force-with-lease
	st = status
	civ = commit --verbose
	co = checkout
	ad = add .
	cim = commit -m
	pom = push origin master
	qfix = commit -p --amend --no-edit
	stash-rename = "!_() { rev=$(git rev-parse $1) && git stash drop $1 || exit 1 ; git stash store -m \"$2\" $rev; }; _"
	stash-unappl = !git stash show -p | git apply -R
	sl = stash list
	cod = checkout .
	unstage = "!u() { git restore --staged $@; }; u"
	cam = commit -a -m
	fp = fetch -p --progress
	last = log -1 HEAD
	whatadded = log --diff-filter=A
	pull-into = "!p() { git checkout $1 && git pull --rebase && git checkout - ; }; p"
	change-date = "!c() { bash ~/dotfiles/git/change_git_date.sh $1; }; c"
	temp-commit = "!t() { bash ~/dotfiles/git/temp_commit.sh $@; }; t"
	clean-brchs = "!cbrchs() { bash ~/dotfiles/git/delete_merged_branches.sh ; }; cbrchs"
	direct-commit = commit --no-verify -m
	past-commit = "!a() { git commit --date '\"'$1' days ago\"' -m \"$2\" ; }; a"

[github]
	user = Anarcroth

[help]
	autocorrect = 20

[core]
	editor = emacsclient --alternate-editor "emacs" --create-frame
	filemode = false
	hooksPath = ~/dotfiles/git/hooks
[pull]
	rebase = true
