#!/bin/bash
#
# This hook is called by "git commit" with no arguments.
# The hook should exit with non-zero status after issuing an appropriate message
# if it wants to stop the commit.
#
# This hook will:
# Check that the commit to be done will not contain any $BAD_WORDS.
# Check for any markers or whitespace errors.
#
# Variables to configure:
# This is a set of words that *should* not be in a commit. Change it to your own liking
BAD_WORDS='(TODO|FIXME|DEBUG|STUB)'

if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

# Redirect output to stderr.
exec 1>&2

# If there are the following keywords in the diff, print offending file names and fail.
offending_files=$(git diff-index --cached --name-only -G"$BAD_WORDS" $against)
if [[ -n $offending_files ]]
then
    cat <<\EOF

Error: You are about to commit files with one of the following keywords:
EOF
    echo $BAD_WORDS | tr "[(|)]" " "
    cat <<\EOF
Make sure that you have addressed all of them appropriately

Offending files:
EOF
echo $offending_files
    cat <<\EOF

If they need to stay, continue your commit with
  git commit --no-verify

EOF
    exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
