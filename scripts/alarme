#!/bin/bash
#
# Alarm/message pop-up

programname=$0

function usage {
  echo "usage: $programname [-m|--message] [-t|--time] [-l|--level]"
  echo "   -m      Message to be reminded of"
  echo "   -t      Time until message pop-up. XXhXXmXXs | XXh | XXm | XXs"
  echo "   -l      (optional) Level of urgency (low(2), normal(1), critical(0))"
  exit 1
}

if [[ $# -le 2 ]]; then
  usage
fi

POSITIONAL=()
while [[ $# -gt 0 ]]
do
  key="$1"

  if [[ $key == "-m" ]] || [[ $key == "--message" ]]; then
    MESSAGE="$2"
    shift
  elif [[ $key == "-t" ]] || [[ $key == "--time" ]]; then
    TIME="$2"
    shift
  elif [[ $key == "-l" ]] || [[ $key == "--level" ]]; then
    LEVEL="$2"
    shift
  elif [[ $key == "-h" ]] || [[ $key == "--help" ]]; then
    usage
  fi
  shift
done
set -- "${POSITIONAL[@]}"

if [[ -z $TIME ]] || [[ -z $MESSAGE ]]; then
  usage
fi

is_zero() {
  if [[ $1 -eq 0 ]]; then
    echo 0
  fi
  echo $1
}

function get_time {
  SECONDS=`echo $TIME | grep -ohEe '[0-9]{1,2}s' | tr -d 's'`
  SECONDS=$(is_zero $SECONDS)

  MINUTES=`echo $TIME | grep -ohEe '[0-9]{1,2}m' | tr -d 'm'`
  MINUTES=$(is_zero $MINUTES)

  HOURS=`echo $TIME | grep -ohEe '[0-9]{1,2}h' | tr -d 'h'`
  HOURS=$(is_zero $HOURS)

  TOTAL_TIME=$(( $SECONDS + $(( $MINUTES * 60 )) + $(( $HOURS * 3600 ))))
}

function get_urgency {
  case $LEVEL in
    low|2)
      LEVEL="low"
      ;;
    medium|1)
      LEVEL="normal"
      ;;
    high|0)
      LEVEL="critical"
      ;;
    *)
      LEVEL="normal"
  esac
}

get_time
get_urgency

mkdir -p $HOME/alarme

cd $HOME/alarme

if [[ ! -f config ]]; then
  touch config
fi

sleep $TOTAL_TIME && notify-send 'AlarmMe!' "$MESSAGE" --icon=dialog-information --urgency="$LEVEL" &

# TODO get the data from the config file, clear the unnecessary PIDs, append the new process, make calculations

echo "pid:" + $(( $! + 1 )) > config
